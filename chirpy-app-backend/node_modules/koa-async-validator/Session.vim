let SessionLoad = 1
let s:so_save = &so | let s:siso_save = &siso | set so=0 siso=0
let v:this_session=expand("<sfile>:p")
silent only
cd ~/Projects/koa-async-validator
if expand('%') == '' && !&modified && line('$') <= 1 && getline(1) == ''
  let s:wipebuf = bufnr('%')
endif
set shortmess=aoO
badd +340 src/koa_validator.js
badd +298 README.md
badd +1 package.json
badd +0 CHANGELOG.md
argglobal
silent! argdel *
$argadd test/asyncTest.js
$argadd test/checkBodySchemaTest.js
$argadd test/checkBodyTest.js
$argadd test/checkParamsSchemaTest.js
$argadd test/checkParamsTest.js
$argadd test/checkQuerySchemaTest.js
$argadd test/checkQueryTest.js
$argadd test/checkSchemaTest.js
$argadd test/checkTest.js
$argadd test/customSanitizersTest.js
$argadd test/formatParamOutputTest.js
$argadd test/mappedOutputTest.js
$argadd test/nestedInputSanitizeTest.js
$argadd test/nestedInputTest.js
$argadd test/optionalSchemaTest.js
$argadd test/optionalTest.js
$argadd test/regexRouteTest.js
$argadd test/sanitizeBodyTest.js
$argadd test/sanitizeHeadersTest.js
$argadd test/sanitizeParamsTest.js
$argadd test/sanitizeQueryTest.js
$argadd test/sanitizerResultTest.js
$argadd test/sanitizerTest.js
$argadd test/withMessageAsyncTest.js
$argadd test/withMessageTest.js
edit CHANGELOG.md
set splitbelow splitright
wincmd _ | wincmd |
vsplit
1wincmd h
wincmd w
set nosplitbelow
set nosplitright
wincmd t
set winminheight=0
set winheight=1
set winminwidth=0
set winwidth=1
exe 'vert 1resize ' . ((&columns * 106 + 106) / 213)
exe 'vert 2resize ' . ((&columns * 106 + 106) / 213)
argglobal
if bufexists("CHANGELOG.md") | buffer CHANGELOG.md | else | edit CHANGELOG.md | endif
setlocal fdm=manual
setlocal fde=Foldexpr_markdown(v:lnum)
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=0
setlocal fml=1
setlocal fdn=20
setlocal nofen
silent! normal! zE
4,274fold
2,274fold
2,274fold
let s:l = 2 - ((1 * winheight(0) + 21) / 43)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
2
normal! 0
wincmd w
argglobal
if bufexists("package.json") | buffer package.json | else | edit package.json | endif
setlocal fdm=syntax
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=0
setlocal fml=1
setlocal fdn=20
setlocal nofen
let s:l = 1 - ((0 * winheight(0) + 21) / 43)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
1
normal! 0
wincmd w
2wincmd w
exe 'vert 1resize ' . ((&columns * 106 + 106) / 213)
exe 'vert 2resize ' . ((&columns * 106 + 106) / 213)
tabnext 1
if exists('s:wipebuf') && getbufvar(s:wipebuf, '&buftype') isnot# 'terminal'
  silent exe 'bwipe ' . s:wipebuf
endif
unlet! s:wipebuf
set winheight=1 winwidth=20 winminheight=1 winminwidth=1 shortmess=filnxtToOFI
let s:sx = expand("<sfile>:p:r")."x.vim"
if file_readable(s:sx)
  exe "source " . fnameescape(s:sx)
endif
let &so = s:so_save | let &siso = s:siso_save
let g:this_session = v:this_session
let g:this_obsession = v:this_session
doautoall SessionLoadPost
unlet SessionLoad
" vim: set ft=vim :
